on: [push, pull_request]

name: Build and Release

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 拉取所有历史以便生成变更日志

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build project
        run: ./gradlew build --stacktrace

      - name: Prepare release (if tagged)
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          export RELEASE_STORE_FILE=$(pwd)/gotfy-release-key.jks
          echo $RELEASE_KEY | base64 -d > $RELEASE_STORE_FILE
          ./gradlew -Psign build --stacktrace
          cp app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/Gotify-${{ github.ref_name }}.apk
        env:
          RELEASE_KEY: ${{ secrets.RELEASE_KEY }}
          RELEASE_STORE_PASSWORD: ${{ secrets.STOREPASS }}
          RELEASE_KEY_ALIAS: gotify-release-key
          RELEASE_KEY_PASSWORD: ${{ secrets.KEYPASS }}

      - name: Generate release notes
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          echo "## What's new" > release-notes.md
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> release-notes.md

      - name: Create and publish Release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: app/build/outputs/apk/release/Gotify-${{ github.ref_name }}.apk
          asset_name: Gotify-${{ github.ref_name }}.apk
          tag: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body_path: release-notes.md
          overwrite: true
          prerelease: false